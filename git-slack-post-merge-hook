#!/bin/bash
#
# Slack (slack.com) notification post-receive hook.
#
# Based on: https://github.com/joemiller/git-hooks Campfire notification post-receive hook. Author: Joe Miller
# (http://joemiller.me)
#
# Based on post-receive.irc by Mikael Fridh <frimik@gmail.com> https://gist.github.com/1821358
#
# Settings needed:
#  git config hooks.slack.webhook-url "https://hooks.slack.com/services/..."
#  git config hooks.slack.channel "general"
#
# - The Slack webhook URL can be found in:
#   https://my.slack.com/services/new/incoming-webhook
#
function help() {
  echo "Required config settings:"
  echo " git config hooks.slack.webhook-url 'https://hooks.slack.com/services/...'"
  echo " git config hooks.slack.channel 'general'"
  echo " git config hooks.slack.show-only-last-commit true #optional"
  echo " git config hooks.slack.show-full-commit true #optional"
  echo " git config hooks.slack.username 'git' #optional"
  echo " git config hooks.slack.icon-url 'http://imgur/icon.png' #optional"
  echo " git config hooks.slack.icon-emoji ':twisted_rightwards_arrows:' #optional"
  echo " git config hooks.slack.repo-nice-name 'MyRepo' #optional"
  echo " git config hooks.slack.repos-root '/path/to/repos' #optional"
  echo " git config hooks.slack.changeset-url-pattern 'http://yourserver/%repo_path%/changeset/%rev_hash%' #optional"
  echo " git config hooks.slack.compare-url-pattern 'http://yourserver/%repo_path%/changeset/%old_rev_hash%..%new_rev_hash%' #optional"
  echo " git config hooks.slack.branch-regexp 'regexp'  #optional"
}

function replace_variables() {
	sed "s|%repo_path%|$repopath|g;s|%old_rev_hash%|$oldrev|g;s|%new_rev_hash%|$newrev|g;s|%rev_hash%|$newrev|g;s|%repo_prefix%|$repoprefix|g"
}

function notify() {

  # Repo name, either Gitolite or normal repo.
  if [ -n "$GL_REPO" ]; then
    # it's a gitolite repo
    repodir=$(basename $(pwd))
    repo=$GL_REPO
  else
    repodir=$(basename $(pwd))
    if [ "$repodir" == ".git" ]; then
      repodir=$(dirname $PWD)
      repodir=$(basename $repodir)
    fi
    repo=${repodir%.git}
  fi

  repoprefix=$(git config hooks.slack.repo-nice-name || git config hooks.irc.prefix || git config hooks.emailprefix || echo "$repo")
  onlylast=$(git config --get hooks.slack.show-only-last-commit)
  onlylast=$onlylast && [ -n "$onlylast" ]
  fullcommit=$(git config --get hooks.slack.show-full-commit)

  # Get the user information
  # If $GL_USER is set we're running under gitolite.
  if [ -n "$GL_USER" ]; then
    user=$GL_USER
  else
    user=$USER
  fi

  branch=$(git branch)
  commit_id=$(git rev-parse HEAD)
  header="Branch ${branch} / ${commit_id} pull."

  msg=$(echo -e "\"text\":\"${header} \"")

  # slack API uses \n substitution for newlines
  # msg=$(echo "${msg}" | perl -p -e 's/\+/&#43;/mg')

  webhook_url=$(git config --get hooks.slack.webhook-url)
  channel=$(git config --get hooks.slack.channel)
  username=$(git config --get hooks.slack.username)
  iconurl=$(git config --get hooks.slack.icon-url)
  iconemoji=$(git config --get hooks.slack.icon-emoji)

  if [ -z "$webhook_url" ]; then
    echo "ERROR: config settings not found"
    help
    exit 1
  fi

  payload="{${msg}"

  if [ -n "$channel" ]; then
    payload="$payload, \"channel\": \"$channel\""
  fi

  if [ -n "$username" ]; then
    payload="$payload, \"username\": \"$username\""
  fi

  if [ -n "$iconurl" ]; then
    payload="$payload, \"icon_url\": \"$iconurl\""
  elif [ -n "$iconemoji" ]; then
    payload="$payload, \"icon_emoji\": \"$iconemoji\""
  fi

  payload="$payload}"

  if [ -n "$DEBUG" ]; then
    echo "POST $webhook_url"
    echo "payload=$payload"
    return
  fi

  curl -s \
      -d "payload=$payload" \
      "$webhook_url" \
      >/dev/null

}

# MAIN PROGRAM
# Read all refs from stdin, notify slack for each
notify $*

exit $RET
